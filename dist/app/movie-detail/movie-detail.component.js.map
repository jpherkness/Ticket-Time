{"version":3,"sources":["../src/app/movie-detail/movie-detail.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAA0B,eAAe,CAAC,CAAA;AAC1C,yBAAyB,iBAAiB,CAAC,CAAA;AAC3C,yBAA+C,iBAAiB,CAAC,CAAA;AAEjE,8BAA2B,yBAAyB,CAAC,CAAA;AACrD,+BAA4B,0BAA0B,CAAC,CAAA;AAEvD,MAAY,EAAE,WAAM,kBAAkB,CAAC,CAAA;AAsCvC;IAQI,YACY,UAAsB,EACtB,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,QAAkB;QAJlB,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAV9B,cAAS,GAAQ,EAAE,CAAC;QACpB,qBAAgB,GAAQ,EAAE,CAAC;QAWrB,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;IACrB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAc;YACvC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;iBAC3B,SAAS,CAAE,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;YAEzC,IAAI,KAAK,GAAG,IAAI,CAAC,8BAA8B,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,GAAC,EAAE,GAAC,EAAE,GAAC,EAAE,GAAC,IAAI,CAAC,CAAC;YAE7E,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC;iBACvD,SAAS,CAAE,SAAS;gBACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,cAAc,CAAC,SAAS;QAC9B,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC;YAC/B,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1C,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;YAC5C,CAAC;YACD,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,CAAC;QACD,MAAM,CAAC,gBAAgB,CAAC;IAC1B,CAAC;IAEO,gBAAgB;QACtB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC;IAED,6BAA6B;IACrB,aAAa,CAAC,QAAQ;QAC5B,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;aAC9B,SAAS,CAAE,WAAW;YACrB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;gBAAC,MAAM,CAAA;YACxB,IAAI,WAAW,GAAG;gBAChB,OAAO,EAAG,WAAW,CAAC,OAAO;gBAC7B,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,QAAQ,EAAE,CAAC;aACZ,CAAA;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,SAAS,CAAC,KAAK;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,eAAe;IAEf;;OAEG;IACK,UAAU,CAAC,IAAU;QAC3B,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;QACjE,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED;;OAEG;IACK,sBAAsB,CAAC,IAAU;QACvC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACnE,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IAED;;OAEG;IACK,8BAA8B,CAAC,IAAU,EAAE,SAAiB;QAClE,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QAC3C,IAAI,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,SAAS,CAAC,CAAC;QACvD,IAAI,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;QACjD,MAAM,CAAC;YACL,KAAK,EAAE,WAAW;YAClB,GAAG,EAAE,SAAS;SACf,CAAA;IACH,CAAC;AACL,CAAC;AA9ID;IAAC,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;KA0BR;QACD,SAAS,EAAE,CAAC,yBAAyB,CAAC;QACtC,SAAS,EAAE;YACT,wBAAU;YACV,0BAAW;SACZ;KACJ,CAAC;;eAAA;AACW,mBAAW,cA0GvB,CAAA","file":"app/movie-detail/movie-detail.component.js","sourceRoot":"/source/","sourcesContent":["import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { ApiService } from '../services/api.service';\nimport { AuthService } from '../services/auth.service';\n\nimport * as io from 'socket.io-client';\n\n@Component({\n    moduleId: module.id,\n    selector: 'movie-detail',\n    template:`\n    <div class='back' (click)='clickBack()'>Back</div>\n    <div class=\"movie-detail-wrapper\" *ngIf=\"movie\">\n      <div class=\"movie-image-wrapper\">\n        <img class=\"movie-image\" src=\"{{movie.poster_url}}\" />\n      </div>\n      <div class=\"movie-info-wrapper\">\n      \n        <h2 class=\"header\"> {{ movie.title }} </h2>\n        <p> {{ movie.description }} </p>\n        <p> Rating: {{ movie.rating }} / 10 </p>\n        <p> Runtime: {{ movie.runtime }} min </p>\n        \n        <h2 class=\"header\"> Showtimes </h2>\n        <select [(ngModel)]=\"selectedDay\" class='date-selector'>\n          <option *ngFor='let date of getShowtimeDates()' [ngValue]='date'>\n            {{date.replace('T', ' ').replace('Z', '') | date:'EEEE, MMMM d'}}\n          </option>\n        </select>\n        <div class='movie-showtimes-wrapper'>\n          <button *ngFor='let showtime of groupedShowtimes[selectedDay]' class='showtime' (click)='clickShowtime(showtime)'>\n            {{showtime.time.replace('T', ' ').replace('Z', '') | date:'h:mm a'}}\n          </button>\n        </div>\n      </div>\n    </div>\n    `,\n    styleUrls: ['movie-detail.styles.css'],\n    providers: [ \n      ApiService,\n      AuthService\n    ]\n})\nexport class MovieDetail{\n  \n    movie: any;\n    showtimes: any = [];\n    groupedShowtimes: any = {};\n    selectedDay: string;\n    socket: any;\n    \n    constructor (\n        private apiService: ApiService,\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private location: Location\n        ){\n          this.socket = io();\n        }\n    \n    ngOnInit() {\n      this.route.params.forEach((params: Params) => {\n        let id = +params['id'];\n        this.apiService.getMovie(id)\n        .subscribe( movie => this.movie = movie);\n        \n        let range = this.getDateTimeStringRangeFromDate(new Date(), 7*24*60*60*1000);\n        \n        this.apiService.getShowtimes(id, range.start, range.end)\n        .subscribe( showtimes => {\n          this.showtimes = showtimes;\n          this.groupedShowtimes = this.groupShowtimes(showtimes);\n          this.selectedDay = this.getShowtimeDates()[0];\n        });\n      });\n    }\n    \n    private groupShowtimes(showtimes) {\n      var groupedShowtimes = {};\n      for (var showtime of showtimes) {\n        var date = new Date(showtime.time);\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        if (!groupedShowtimes[date.toISOString()]) {\n          groupedShowtimes[date.toISOString()] = [];\n        }\n        groupedShowtimes[date.toISOString()].push(showtime);\n      }\n      return groupedShowtimes;\n    }\n    \n    private getShowtimeDates(){\n      return Object.keys(this.groupedShowtimes);\n    }\n    \n    // Possibly move over to api?\n    private clickShowtime(showtime) {\n      this.authService.getCurrentUser()\n        .subscribe( currentUser => {\n          if (!currentUser) return\n          var reservation = {\n            user_id : currentUser.user_id,\n            showtime_id: showtime.showtime_id,\n            quantity: 1\n          }\n          this.socket.emit('reservation:create', reservation);\n        });\n    }\n    \n    private clickBack(event) {\n      this.location.back();\n    }\n    \n    // Date Helpers\n    \n    /*\n     * Removes the timezone offset from a date object, creating a UTC date.\n     */\n    private getUTCDate(date: Date): Date {\n      var UTCDate = new Date(date);\n      UTCDate.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n      return UTCDate;\n    }\n    \n    /*\n     * Generates a MySQL formatted datetime string from a javascript date object.\n     */\n    private getMySqlDateTimeString(date: Date): string {\n      var dateString = date.toISOString().slice(0, 19).replace('T', ' ');\n      return dateString;\n    }\n    \n    /*\n     * Returns a range of date strings from a given date with a durration.\n     */ \n    private getDateTimeStringRangeFromDate(date: Date, durration: number): any {\n      let start = this.getUTCDate(new Date(date))\n      let startString = this.getMySqlDateTimeString(start);\n      var end = new Date(start);\n      end.setMilliseconds(end.getMilliseconds() + durration);\n      let endString = this.getMySqlDateTimeString(end);\n      return {\n        start: startString,\n        end: endString\n      }\n    }\n}"]}