{"version":3,"sources":["../src/app/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAA0B,eAAe,CAAC,CAAA;AAC1C,yBAAuB,iBAAiB,CAAC,CAAA;AACzC,+BAA4B,0BAE5B,CAAC,CAFqD;AAyBtD;IAOE,YAAqB,WAAwB,EACzB,MAAc;QADb,gBAAW,GAAX,WAAW,CAAa;QACzB,WAAM,GAAN,MAAM,CAAQ;QAN1B,UAAK,GAAW,EAAE,CAAC;QACnB,aAAQ,GAAW,EAAE,CAAC;QAEtB,iBAAY,GAAY,KAAK,CAAC;IAGD,CAAC;IAEtC,qBAAqB;IACrB,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpD,CAAC;IAED,gCAAgC;IAChC,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;AACH,CAAC;AA1CD;IAAC,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE;;;;;;;;;;;;;;;;KAgBT;QACD,SAAS,EAAE,CAAC,kBAAkB,CAAC;QAC/B,SAAS,EAAE,CAAE,0BAAW,CAAE;KAC7B,CAAC;;SAAA;AACW,aAAK,QAmBjB,CAAA","file":"app/login/login.component.js","sourceRoot":"/source/","sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service' \n\n@Component({\n    moduleId: module.id,\n    selector: 'login',\n    template: `\n    <div class=\"login-wrapper\">\n      <div class=\"card\">\n        <div class=\"header\">Login</div>\n        <p>Email</p>\n        <input type=\"text\" placeholder=\"Enter your email\" [(ngModel)]=\"email\" />\n        <p>Password</p> \n        <input *ngIf=\"showPassword\" type=\"text\" placeholder=\"Enter your password\" [(ngModel)]=\"password\" />\n        <input *ngIf=\"!showPassword\" type=\"password\" placeholder=\"Enter your password\" [(ngModel)]=\"password\" />\n        <!--<span style=\"cursor: pointer;\" (click)=\"showPassword = !showPassword\">Show</span>-->\n        <div>\n          <button (click)=\"submit()\">Login</button>\n        </div>\n        <a (click)=\"navigateSignUp()\">Don't have an account?</a>\n      </div>\n    </div>\n    `,\n    styleUrls: ['login.styles.css'],\n    providers: [ AuthService ]\n})\nexport class Login {\n  \n  private email: string = \"\";\n  private password: string = \"\";\n  \n  private showPassword: boolean = false;\n  \n  constructor (private authService: AuthService,\n              private router: Router){ }\n  \n  // Authenticate user.\n  submit() {\n    this.authService.login(this.email, this.password);\n  }\n\n  // Navigate user to signup page.\n  navigateSignUp() {\n    this.router.navigate(['/signup']);\n  }\n}"]}